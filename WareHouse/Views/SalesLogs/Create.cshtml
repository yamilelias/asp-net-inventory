@model WareHouse.Models.SalesLog

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SalesLog</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ItemID, "ItemID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ItemID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemOrderQTY, htmlAttributes: new { @class = "control-label col-md-2" })
             
            <div class="col-md-10">
                

                @Html.EditorFor(model => model.ItemOrderQTY, new { htmlAttributes = new { @class = "form-control" } })
                @if (ViewBag.mensaje == "1")
                {
                   
                    @Html.ValidationMessageFor(model => model.ItemOrderQTY, "", new { @class = "text-danger" })

                }
                else if (ViewBag.mensaje == "0")
                {
                    <p>La cantidad no se encuentra en el inventario</p>
                  
                    @Html.ValidationMessageFor(model => model.ItemOrderQTY, "", new { @class = "text-danger" })

                }
                

            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

